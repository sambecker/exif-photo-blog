import { useCallback, useMemo, useState } from 'react';
import { PhotoFormData, formHasExistingAiTextContent } from '.';
import useAiImageQueries from '../ai/useAiImageQueries';
import { AiAutoGeneratedField, getAiTextFieldsToGenerate } from '../ai';

export default function usePhotoFormParent({
  photoForm,
  textFieldsToAutoGenerate: _textFieldsToAutoGenerate = [],
  imageThumbnailBase64,
}: {
  photoForm?: Partial<PhotoFormData>
  textFieldsToAutoGenerate?: AiAutoGeneratedField[]
  imageThumbnailBase64?: string,
}) {
  const [pending, setIsPending] = useState(false);
  const [updatedTitle, setUpdatedTitle] = useState('');
  const [shouldConfirmAiTextGeneration, _setShouldConfirmAiTextGeneration] =
    useState(formHasExistingAiTextContent(photoForm));

  const setShouldConfirmAiTextGeneration = useCallback(
    (updatedFormData: Partial<PhotoFormData>) => {
      _setShouldConfirmAiTextGeneration(
        formHasExistingAiTextContent(updatedFormData),
      );
    }, []);

  // Don't auto-generate titles when they can be captured from EXIF data
  const textFieldsToAutoGenerate = useMemo(() =>
    getAiTextFieldsToGenerate(
      _textFieldsToAutoGenerate,
      Boolean(photoForm?.title),
      Boolean(photoForm?.caption),
      Boolean(photoForm?.tags),
    ), [
    _textFieldsToAutoGenerate,
    photoForm?.title,
    photoForm?.caption,
    photoForm?.tags,
  ]);

  const aiContent = useAiImageQueries(
    textFieldsToAutoGenerate,
    imageThumbnailBase64,
  );

  return {
    pending,
    setIsPending,
    updatedTitle,
    setUpdatedTitle,
    shouldConfirmAiTextGeneration,
    setShouldConfirmAiTextGeneration,
    aiContent,
  };
}
